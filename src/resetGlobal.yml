  - key: escape escape
    command: -workbench.action.exitZenMode
    when: inZenMode
  - key: ctrl+l
    command: -expandLineSelection
    when: textInputFocus
  - key: ctrl+y
    command: -redo
  - key: f12
    command: -goToNextReference
    when: inReferenceSearchEditor || referenceSearchVisible
  - key: f4
    command: -goToNextReference
    when: inReferenceSearchEditor || referenceSearchVisible
  - key: shift+f12
    command: -goToPreviousReference
    when: inReferenceSearchEditor || referenceSearchVisible
  - key: shift+f4
    command: -goToPreviousReference
    when: inReferenceSearchEditor || referenceSearchVisible
  - key: ctrl+u
    command: -cursorUndo
    when: textInputFocus
  - key: ctrl+k ctrl+c
    command: -editor.action.addCommentLine
    when: editorTextFocus && !editorReadonly
  - key: ctrl+d
    command: -editor.action.addSelectionToNextFindMatch
    when: editorFocus
  - key: shift+alt+oem_period
    command: -editor.action.autoFix
    when: textInputFocus && !editorReadonly && supportedCodeAction =~ /(\s|^)quickfix\b/
  - key: shift+alt+a
    command: -editor.action.blockComment
    when: editorTextFocus && !editorReadonly
  - key: ctrl+f2
    command: -editor.action.changeAll
    when: editorTextFocus && !editorReadonly
  - key: ctrl+insert
    command: -editor.action.clipboardCopyAction
  - key: shift+insert
    command: -editor.action.clipboardPasteAction
  - key: ctrl+oem_2
    command: -editor.action.commentLine
    when: editorTextFocus && !editorReadonly
  - key: ctrl+shift+k
    command: -editor.action.deleteLines
    when: textInputFocus && !editorReadonly
  - key: f7
    command: -editor.action.diffReview.next
    when: isInDiffEditor
  - key: shift+f7
    command: -editor.action.diffReview.prev
    when: isInDiffEditor
  - key: alt+f3
    command: -editor.action.dirtydiff.next
    when: editorTextFocus && !textCompareEditorActive
  - key: shift+alt+f3
    command: -editor.action.dirtydiff.previous
    when: editorTextFocus && !textCompareEditorActive
  - key: shift+alt+f
    command: -editor.action.formatDocument
    when: editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor
  - key: shift+alt+f
    command: -editor.action.formatDocument.none
    when: editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly
  - key: ctrl+k ctrl+f
    command: -editor.action.formatSelection
    when: editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly
  - key: ctrl+f12
    command: -editor.action.goToImplementation
    when: editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor
  - key: shift+f12
    command: -editor.action.goToReferences
    when: editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor
  - key: ctrl+shift+oem_period
    command: -editor.action.inPlaceReplace.down
    when: editorTextFocus && !editorReadonly
  - key: ctrl+shift+oem_comma
    command: -editor.action.inPlaceReplace.up
    when: editorTextFocus && !editorReadonly
  - key: ctrl+oem_6
    command: -editor.action.indentLines
    when: editorTextFocus && !editorReadonly
  - key: alt+oem_6
    command: -editor.action.inlineSuggest.showNext
    when: inlineSuggestionVisible && !editorReadonly
  - key: alt+oem_4
    command: -editor.action.inlineSuggest.showPrevious
    when: inlineSuggestionVisible && !editorReadonly
  - key: shift+alt+i
    command: -editor.action.insertCursorAtEndOfEachLineSelected
    when: editorTextFocus
  - key: ctrl+shift+oem_5
    command: -editor.action.jumpToBracket
    when: editorTextFocus
  - key: ctrl+shift+f2
    command: -editor.action.linkedEditing
    when: editorHasRenameProvider && editorTextFocus && !editorReadonly
  - key: alt+f8
    command: -editor.action.marker.next
    when: editorFocus
  - key: f8
    command: -editor.action.marker.nextInFiles
    when: editorFocus
  - key: shift+alt+f8
    command: -editor.action.marker.prev
    when: editorFocus
  - key: shift+f8
    command: -editor.action.marker.prevInFiles
    when: editorFocus
  - key: ctrl+k ctrl+d
    command: -editor.action.moveSelectionToNextFindMatch
    when: editorFocus
  - key: alt+f9
    command: -editor.action.nextCommentThreadAction
    when: editorFocus
  - key: f3
    command: -editor.action.nextMatchFindAction
    when: editorFocus
  - key: ctrl+f3
    command: -editor.action.nextSelectionMatchFindAction
    when: editorFocus
  - key: shift+alt+o
    command: -editor.action.organizeImports
    when: textInputFocus && !editorReadonly && supportedCodeAction =~ /(\s|^)source\.organizeImports\b/
  - key: ctrl+oem_4
    command: -editor.action.outdentLines
    when: editorTextFocus && !editorReadonly
  - key: alt+f12
    command: -editor.action.peekDefinition
    when: editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor
  - key: ctrl+shift+f12
    command: -editor.action.peekImplementation
    when: editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor
  - key: shift+alt+f9
    command: -editor.action.previousCommentThreadAction
    when: editorFocus
  - key: shift+f3
    command: -editor.action.previousMatchFindAction
    when: editorFocus
  - key: ctrl+shift+f3
    command: -editor.action.previousSelectionMatchFindAction
    when: editorFocus
  - key: ctrl+oem_period
    command: -editor.action.quickFix
    when: editorHasCodeActionsProvider && textInputFocus && !editorReadonly
  - key: ctrl+shift+r
    command: -editor.action.refactor
    when: editorHasCodeActionsProvider && textInputFocus && !editorReadonly
  - key: ctrl+k ctrl+u
    command: -editor.action.removeCommentLine
    when: editorTextFocus && !editorReadonly
  - key: f2
    command: -editor.action.rename
    when: editorHasRenameProvider && editorTextFocus && !editorReadonly
  - key: f12
    command: -editor.action.revealDefinition
    when: editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor
  - key: ctrl+f12
    command: -editor.action.revealDefinition
    when: editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor
  - key: ctrl+k f12
    command: -editor.action.revealDefinitionAside
    when: editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor
  - key: ctrl+k ctrl+f12
    command: -editor.action.revealDefinitionAside
    when: editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor
  - key: ctrl+k ctrl+k
    command: -editor.action.selectFromAnchorToCursor
    when: editorTextFocus && selectionAnchorSet
  - key: ctrl+shift+l
    command: -editor.action.selectHighlights
    when: editorFocus
  - key: ctrl+k ctrl+b
    command: -editor.action.setSelectionAnchor
    when: editorTextFocus
  - key: shift+f10
    command: -editor.action.showContextMenu
    when: textInputFocus
  - key: ctrl+k ctrl+i
    command: -editor.action.showHover
    when: editorTextFocus
  - key: ctrl+h
    command: -editor.action.startFindReplaceAction
    when: editorFocus || editorIsOpen
  - key: ctrl+m
    command: -editor.action.toggleTabFocusMode
  - key: alt+z
    command: -editor.action.toggleWordWrap
  - key: ctrl+i
    command: -editor.action.triggerSuggest
    when: editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible
  - key: ctrl+k ctrl+x
    command: -editor.action.trimTrailingWhitespace
    when: editorTextFocus && !editorReadonly
  - key: f7
    command: -editor.action.wordHighlight.next
    when: editorTextFocus && hasWordHighlights
  - key: shift+f7
    command: -editor.action.wordHighlight.prev
    when: editorTextFocus && hasWordHighlights
  - key: ctrl+oem_period
    command: -editor.changeDropType
    when: dropWidgetVisible
  - key: ctrl+oem_period
    command: -editor.changePasteType
    when: pasteWidgetVisible
  - key: ctrl+k ctrl+oem_comma
    command: -editor.createFoldingRangeFromSelection
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+i
    command: -editor.debug.action.showDebugHover
    when: editorTextFocus && inDebugMode
  - key: f9
    command: -editor.debug.action.toggleBreakpoint
    when: debuggersAvailable && editorTextFocus
  - key: ctrl+shift+oem_4
    command: -editor.fold
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+0
    command: -editor.foldAll
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+oem_2
    command: -editor.foldAllBlockComments
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+oem_minus
    command: -editor.foldAllExcept
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+8
    command: -editor.foldAllMarkerRegions
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+1
    command: -editor.foldLevel1
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+2
    command: -editor.foldLevel2
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+3
    command: -editor.foldLevel3
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+4
    command: -editor.foldLevel4
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+5
    command: -editor.foldLevel5
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+6
    command: -editor.foldLevel6
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+7
    command: -editor.foldLevel7
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+oem_4
    command: -editor.foldRecursively
    when: editorTextFocus && foldingEnabled
  - key: f12
    command: -editor.gotoNextSymbolFromResult
    when: hasSymbols
  - key: ctrl+k ctrl+oem_period
    command: -editor.removeManualFoldingRanges
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+l
    command: -editor.toggleFold
    when: editorTextFocus && foldingEnabled
  - key: ctrl+shift+oem_6
    command: -editor.unfold
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+j
    command: -editor.unfoldAll
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+oem_plus
    command: -editor.unfoldAllExcept
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+9
    command: -editor.unfoldAllMarkerRegions
    when: editorTextFocus && foldingEnabled
  - key: ctrl+k ctrl+oem_6
    command: -editor.unfoldRecursively
    when: editorTextFocus && foldingEnabled
  - key: ctrl+shift+v
    command: -notebook.cell.pasteAbove
    when: notebookEditorFocused && !inputFocus
  - key: shift+alt+f
    command: -notebook.formatCell
    when: editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'
  - key: ctrl+shift+r
    command: -rerunSearchEditorSearch
    when: inSearchEditor
  - key: ctrl+oem_2
    command: -toggleExplainMode
    when: suggestWidgetVisible
  - key: ctrl+k f2
    command: -togglePeekWidgetFocus
    when: inReferenceSearchEditor || referenceSearchVisible
  - key: alt+f5
    command: -workbench.action.editor.nextChange
    when: editorTextFocus && !textCompareEditorActive
  - key: shift+alt+f5
    command: -workbench.action.editor.previousChange
    when: editorTextFocus && !textCompareEditorActive
  - key: alt+f8
    command: -testing.goToNextMessage
    when: editorFocus && testing.isPeekVisible
  - key: shift+alt+f8
    command: -testing.goToPreviousMessage
    when: editorFocus && testing.isPeekVisible
  - key: ctrl+shift+1
    command: -editor.action.replaceOne
    when: editorFocus && findWidgetVisible
  - key: alt+c
    command: -toggleFindCaseSensitive
    when: editorFocus
  - key: alt+l
    command: -toggleFindInSelection
    when: editorFocus
  - key: alt+r
    command: -toggleFindRegex
    when: editorFocus
  - key: alt+w
    command: -toggleFindWholeWord
    when: editorFocus
  - key: alt+p
    command: -togglePreserveCase
    when: editorFocus
  - key: ctrl+i
    command: -focusSuggestion
    when: suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion
  - key: ctrl+i
    command: -toggleSuggestionDetails
    when: suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus
  - key: ctrl+shift+l
    command: -addCursorsAtSearchResults
    when: fileMatchOrMatchFocus && searchViewletVisible
  - key: ctrl+shift+oem_1
    command: -breadcrumbs.focus
    when: breadcrumbsPossible && breadcrumbsVisible
  - key: ctrl+shift+oem_period
    command: -breadcrumbs.focusAndSelect
    when: breadcrumbsPossible && breadcrumbsVisible
  - key: ctrl+shift+oem_period
    command: -breadcrumbs.toggleToOn
    when: '!config.breadcrumbs.enabled'
  - key: ctrl+shift+i
    command: -chat.action.askQuickQuestion
    when: hasChatProvider
  - key: shift+alt+c
    command: -copyFilePath
    when: '!editorFocus'
  - key: shift+alt+c
    command: -copyFilePath
    when: editorFocus
  - key: ctrl+k ctrl+shift+c
    command: -copyRelativeFilePath
    when: '!editorFocus'
  - key: ctrl+k ctrl+shift+c
    command: -copyRelativeFilePath
    when: editorFocus
  - key: ctrl+f5
    command: -debug.openView
    when: '!debuggersAvailable'
  - key: f5
    command: -debug.openView
    when: '!debuggersAvailable'
  - key: alt+oem_minus
    command: -decreaseSearchEditorContextLines
    when: inSearchEditor
  - key: alt+f1
    command: -editor.action.accessibilityHelp
  - key: alt+f2
    command: -editor.action.accessibleView
  - key: ctrl+k ctrl+k
    command: -editor.action.defineKeybinding
    when: resource == 'vscode-userdata:/c%3A/Users/jaid/AppData/Roaming/Code/User/keybindings.json'
  - key: shift+f9
    command: -editor.debug.action.toggleInlineBreakpoint
    when: editorTextFocus
  - key: shift+alt+d
    command: -editor.detectLanguage
    when: editorTextFocus && !notebookEditable
  - key: shift+alt+h
    command: -editor.showCallHierarchy
    when: editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor
  - key: shift+alt+h
    command: -editor.showIncomingCalls
    when: callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'
  - key: shift+alt+h
    command: -editor.showOutgoingCalls
    when: callHierarchyVisible && callHierarchyDirection == 'incomingCalls'
  - key: shift+alt+h
    command: -editor.showSubtypes
    when: typeHierarchyVisible && typeHierarchyDirection == 'supertypes'
  - key: shift+alt+h
    command: -editor.showSupertypes
    when: typeHierarchyVisible && typeHierarchyDirection == 'subtypes'
  - key: shift+alt+f
    command: -filesExplorer.findInFolder
    when: explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus
  - key: alt+oem_plus
    command: -increaseSearchEditorContextLines
    when: inSearchEditor
  - key: ctrl+k i
    command: -inlineChat.start
    when: inlineChatHasProvider && !editorReadonly
  - key: ctrl+i
    command: -inlineChat.start
    when: inlineChatHasProvider && !editorReadonly
  - key: ctrl+k ctrl+a
    command: -keybindings.editor.addKeybinding
    when: inKeybindings && keybindingFocus
  - key: ctrl+k ctrl+e
    command: -keybindings.editor.defineWhenExpression
    when: inKeybindings && keybindingFocus
  - key: alt+k
    command: -keybindings.editor.recordSearchKeys